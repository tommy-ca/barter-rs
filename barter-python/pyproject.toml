[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "barter-python"
version = "0.1.2"
description = "High-performance Python bindings for the Barter algorithmic trading engine"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Barter Developers", email = "dev@barter.rs" },
]
maintainers = [
    { name = "Barter Developers", email = "dev@barter.rs" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
keywords = [
    "trading",
    "algorithmic-trading",
    "finance",
    "quantitative",
    "high-frequency-trading",
    "rust",
    "python-bindings",
    "market-data",
    "backtesting",
    "execution",
]

[project.urls]
Homepage = "https://barter.rs"
Documentation = "https://docs.barter.rs/python/"
Repository = "https://github.com/barter-rs/barter-rs"
"Bug Reports" = "https://github.com/barter-rs/barter-rs/issues"
"Source" = "https://github.com/barter-rs/barter-rs"
Changelog = "https://github.com/barter-rs/barter-rs/blob/main/CHANGELOG.md"

[project.optional-dependencies]
test = [
    "pytest>=8.3",
    "pytest-asyncio>=0.23",
    "pytest-cov>=4.1",
]
dev = [
    "ruff>=0.6.0",
    "mypy>=1.8",
    "pre-commit>=3.6",
]
docs = [
    "sphinx>=7.0",
    "sphinx-rtd-theme>=1.3",
    "myst-parser>=2.0",
]

[project.scripts]
barter-backtest = "barter_python_cli.backtest:main"

[tool.maturin]
bindings = "pyo3"
module-name = "barter_python"
features = ["extension-module"]
python-source = "python"
include = [
    { path = "python/**/*.py", format = "sdist" },
    { path = "python/**/*.pyi", format = "sdist" },
    { path = "README.md", format = "sdist" },
    { path = "LICENSE", format = "sdist" },
]
exclude = [
    "python/**/*.pyc",
    "python/**/__pycache__",
    "python/**/*.pyo",
]
compatibility = "manylinux2014"
strip = true
zig = false

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra"
testpaths = ["tests_py"]
markers = [
    "integration: end-to-end engine lifecycle scenarios",
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long, handled by ruff format
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["B011"] # assert false
"python/barter_python/strategy.py" = ["B023"] # false positive for closure capturing loop variable

[tool.ruff.lint.isort]
known-first-party = ["barter_python"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[dependency-groups]
dev = [
    "ruff>=0.6.0",
    "mypy>=1.8",
    "pre-commit>=3.6",
    "pytest>=8.3",
    "pytest-asyncio>=0.23",
    "pytest-cov>=4.1",
]
